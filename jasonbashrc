
alias py="python"
alias ll="ls"
alias l="ll -al"
alias d="cd"
alias ref=". ~/.bashrc"
alias v="vim"
alias into="ssh -i tina-test.pem"
alias op="xdg-open"

# Below is Jason's stuff ;)
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f ~/.bash_functions ]; then
    . ~/.bash_functions
fi

# Define human readable colors
Black='\[\e[0;30m\]'        # Black
Red='\[\e[0;31m\]'          # Red
Green='\[\e[0;32m\]'        # Green
Yellow='\[\e[0;33m\]'       # Yellow
Blue='\[\e[0;34m\]'         # Blue
Purple='\[\e[0;35m\]'       # Purple
Cyan='\[\e[0;36m\]'         # Cyan
White='\[\e[0;37m\]'        # White

# Bold
BBlack='\[\e[1;30m\]'       # Black
BRed='\[\e[1;31m\]'         # Red
BGreen='\[\e[1;32m\]'       # Green
BYellow='\[\e[1;33m\]'      # Yellow
BBlue='\[\e[1;34m\]'        # Blue
BPurple='\[\e[1;35m\]'      # Purple
BCyan='\[\e[1;36m\]'        # Cyan
BWhite='\[\e[1;37m\]'       # White

# High Intensty
IBlack='\[\e[0;90m\]'       # Black
IRed='\[\e[0;91m\]'         # Red
IGreen='\[\e[0;92m\]'       # Green
IYellow='\[\e[0;93m\]'      # Yellow
IBlue='\[\e[0;94m\]'        # Blue
IPurple='\[\e[0;95m\]'      # Purple
ICyan='\[\e[0;96m\]'        # Cyan
IWhite='\[\e[0;97m\]'       # White

# Bold High Intensty
BIBlack='\[\e[1;90m\]'      # Black
BIRed='\[\e[1;91m\]'        # Red
BIGreen='\[\e[1;92m\]'      # Green
BIYellow='\[\e[1;93m\]'     # Yellow
BIBlue='\[\e[1;94m\]'       # Blue
BIPurple='\[\e[1;95m\]'     # Purple
BICyan='\[\e[1;96m\]'       # Cyan
BIWhite='\[\e[1;97m\]'      # White

Default='\[\e[0m\]'         # Default Colors

# If not running interactively, don't do anything
case $- in
    *i*) ;;
    *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# check for color support for the prompt:
if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
else
    color_prompt=
fi

if [ "$color_prompt" = yes ]; then
    prompt_break="********************************************************************************"
    if [[ $(whoami) == "root" ]]; then
        # PS1=''$BYellow'${prompt_break}\n'$BRed'$(parse_git_branch)'$BWhite'['$BRed'\u'$BPurple'@\h:'$BBlue'\w'$BWhite']\n'$BRed'$ '$Default''
        PS1=''$BYellow'${prompt_break}\n'$BWhite'['$BRed'\u'$BPurple'@\h:'$BBlue'\w'$BWhite']\n'$BRed'$ '$Default''
    else
        # PS1=''$BGreen'${prompt_break}\n'$BRed'$(parse_git_branch)'$BWhite'['$BGreen'\u'$BPurple'@\h:'$BBlue'\w'$BWhite']\n'$BRed'$ '$Default''
        PS1=''$BGreen'${prompt_break}\n'$BWhite'['$BGreen'\u'$BPurple'@\h:'$BBlue'\w'$BWhite']\n'$BRed'$ '$Default''
    fi
    export PS1
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
    xterm*|rxvt*)
        PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
    *)
    ;;
esac

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
        elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

###-appbuilder-completion-start-###
if [ -f $HOME/.appbuilderrc ]; then
    source $HOME/.appbuilderrc
fi
###-appbuilder-completion-end-###

###-neopulse environment-start-###
if [ -f $HOME/.neopulserc ]; then
    source $HOME/.neopulserc
fi

if [ $(uname) == "Linux" ]; then
    # set up Intel Performance Libraries
    [[ -e /opt/intel/compilers_and_libraries/linux/mkl/bin/mklvars.sh ]] && source /opt/intel/compilers_and_libraries/linux/mkl/bin/mklvars.sh intel64
    [[ -e /opt/intel/compilers_and_libraries/linux/tbb/bin/tbbvars.sh ]] && source /opt/intel/compilers_and_libraries/linux/tbb/bin/tbbvars.sh intel64
    [[ -e /opt/intel/compilers_and_libraries/linux/ipp/bin/ippvars.sh ]] && source /opt/intel/compilers_and_libraries/linux/ipp/bin/ippvars.sh intel64
    [[ -e /opt/intel/compilers_and_libraries/linux/daal/bin/daalvars.sh ]] && source /opt/intel/compilers_and_libraries/linux/daal/bin/daalvars.sh intel64

    # Add anaconda to path
    [[ -d "/opt/conda/bin" ]] && export PATH="/opt/conda/bin:$PATH"
    [[ -d "/opt/anaconda/bin" ]] && export PATH="/opt/anaconda/bin:$PATH"

fi

if [ $(uname) == "Darwin" ]; then
    export CLICOLOR=1
    export LSCOLORS='Bxgxfxfxcxdxdxhbadbxbx'

    # set up Intel Performance Libraries
    [[ -e /opt/intel/compilers_and_libraries/mac/mkl/bin/mklvars.sh ]] && source /opt/intel/compilers_and_libraries/mac/mkl/bin/mklvars.sh intel64
    [[ -e /opt/intel/compilers_and_libraries/mac/tbb/bin/tbbvars.sh ]] && source /opt/intel/compilers_and_libraries/mac/tbb/bin/tbbvars.sh intel64
    [[ -e /opt/intel/compilers_and_libraries/mac/ipp/bin/ippvars.sh ]] && source /opt/intel/compilers_and_libraries/mac/ipp/bin/ippvars.sh intel64
    [[ -e /opt/intel/compilers_and_libraries/mac/daal/bin/daalvars.sh ]] && source /opt/intel/compilers_and_libraries/mac/daal/bin/daalvars.sh intel64

    # Set up Gaussian environment
    if [ -d "/opt/Gaussian" ]; then
        export g09root="/opt/Gaussian"
        export GAUSS_SCRDIR="$HOME/Code/Gaussian/scratch"
        . $g09root/g09/bsd/g09.profile
    fi

    # Add anaconda to path
    [[ -d "/Applications/Anaconda/bin" ]] && export PATH="/Applications/Anaconda/bin:$PATH"

fi
